/* Copyright (c) 2020, The Linux Foundation. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#include "mediatek/mt6833-moto-common-overlay.dtsi"
#include <dt-bindings/mmc/mt6833-msdc.h>
#include "mediatek/mt6833-saipan-sensor-overlay.dtsi"

&mt6360_typec {
	mt6360pd,intr_gpio_num = <9>; /* direct defined GPIO num */
	mt6360pd,intr_gpio = <&pio 9 0x0>;
};

&pio {
	fpsensor_spi_cs_en0: fpsensor_spi_cs_low {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO36__FUNC_SPI5_CSB>;
			slew-rate = <1>;
			output-low;
		};
	};

	fpsensor_spi_cs_en1: fpsensor_spi_cs_high {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO36__FUNC_SPI5_CSB>;
			slew-rate = <1>;
			output-high;
		};
	};

	fpsensor_spi_mi_mode_en0: fpsensor_spi_mi_low {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO38__FUNC_SPI5_MI>;
			slew-rate = <0>;
			bias-pull-down;
		};
	};
	fpsensor_spi_mi_mode_en1: fpsensor_spi_mi_high {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO38__FUNC_SPI5_MI>;
			bias-disable;
		};
	};

	fpsensor_spi_mo_mode_en0: fpsensor_spi_mo_low {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO37__FUNC_SPI5_MO>;
			slew-rate = <1>;
			output-low;
		};
	};

	fpsensor_spi_mo_mode_en1: fpsensor_spi_mo_high {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO37__FUNC_SPI5_MO>;
			slew-rate = <1>;
			output-high;
		};
	};

	fpsensor_spi_mclk_mode_en0: fpsensor_spi_mclk_low {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO35__FUNC_SPI5_CLK>;
			slew-rate = <1>;
			output-low;
		};
	};

	fpsensor_spi_mclk_mode_en1: fpsensor_spi_mclk_high {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO35__FUNC_SPI5_CLK>;
			slew-rate = <1>;
			output-high;
		};
	};

	fpsensor_finger_rst_mode_en0: fpsensor_finger_rst_low {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO88__FUNC_GPIO88>;
			slew-rate = <1>;
			output-low;
		};
	};

	fpsensor_finger_rst_mode_en1: fpsensor_finger_rst_high {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO88__FUNC_GPIO88>;
			slew-rate = <1>;
			output-high;
		};
	};

	fpsensor_fp_eint_as_int: fpsensor_eint_as_int {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO11__FUNC_GPIO11>;
			slew-rate = <0>;
			bias-disable;
			input-enable;
		};
	};

	fpsensor_fp_eint_in_low: fpsensor_eint_in_low {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO11__FUNC_GPIO11>;
			slew-rate = <0>;
			output-low;
		};
	};

	fpsensor_fp_eint_in_float: fpsensor_eint_in_float {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO11__FUNC_GPIO11>;
			slew-rate = <0>;
			bias-disable;
		};
	};
};

&mt_pmic_vfp_ldo_reg {
	regulator-min-microvolt = <3000000>;
	regulator-max-microvolt = <3000000>;
	regulator-always-on;
};

&spi5 {
	#address-cells = <1>;
	#size-cells = <0>;
	fingerprint@0 {
		status = "okay";
		compatible = "mediatek,fingerprintchipone";
		reg = <0>;
		spi-max-frequency = <8000000>;
		netlink-event = <30>;
	};
};

&chipone_fp {
	interrupt-parent = <&pio>;
	interrupts = <11 IRQ_TYPE_EDGE_RISING>;
	debounce = <11 0>;
	pinctrl-names = "fpsensor_spi_cs_low","fpsensor_spi_cs_high","fpsensor_spi_mi_low","fpsensor_spi_mi_high","fpsensor_spi_mo_low",
			"fpsensor_spi_mo_high","fpsensor_spi_mclk_low","fpsensor_spi_mclk_high","fpsensor_finger_rst_low",
			"fpsensor_finger_rst_high","fpsensor_eint_as_int","fpsensor_eint_in_low","fpsensor_eint_in_float";
	pinctrl-0 = <&fpsensor_spi_cs_en0>;
	pinctrl-1 = <&fpsensor_spi_cs_en1>;
	pinctrl-2 = <&fpsensor_spi_mi_mode_en0>;
	pinctrl-3 = <&fpsensor_spi_mi_mode_en1>;
	pinctrl-4 = <&fpsensor_spi_mo_mode_en0>;
	pinctrl-5 = <&fpsensor_spi_mo_mode_en1>;
	pinctrl-6 = <&fpsensor_spi_mclk_mode_en0>;
	pinctrl-7 = <&fpsensor_spi_mclk_mode_en1>;
	pinctrl-8 = <&fpsensor_finger_rst_mode_en0>;
	pinctrl-9 = <&fpsensor_finger_rst_mode_en1>;
	pinctrl-10 = <&fpsensor_fp_eint_as_int>;
	pinctrl-11 = <&fpsensor_fp_eint_in_low>;
	pinctrl-12 = <&fpsensor_fp_eint_in_float>;
	status = "okay";
};

&msdc1 {
	cd_level = /bits/ 8 <MSDC_CD_HIGH>;
};

&sound {
	mediatek,speaker-codec {
		sound-dai = <&aw881xx_smartpa>;
	};
};

&i2c6 {
       aw881xx_smartpa: aw881xx_smartpa@34 {
		compatible = "awinic,aw881xx_smartpa";
		reg = <0x34>;
		reset-gpio = <&pio 169 0>;
		irq-gpio = <&pio 39 0>;
		monitor-flag = <1>;
		monitor-timer-val = <30000>;
		status = "okay";
	};
};

&odm {
	moto_chg_tcmd: moto_chg_tcmd {
		compatible = "mmi,moto-chg-tcmd";
		status = "okay";

		mmi,ntc_table = <1>;
		mmi,ntc_v_ref = <1800000>;
		mmi,ntc_r_pull = <100000>;

		mmi,batid_v_ref = <1800000>;
		mmi,batid_r_pull = <100000>;

		mmi,adc-channel-cpu = <0>;
		mmi,adc-channel-charger = <2>;
		mmi,adc-channel-pa = <1>;
		mmi,adc-channel-batid = <3>;
		mmi,adc-channel-vbat = <100>;
	};
};

&charger {
	/* common */
	battery_cv = <4400000>;

	/* charging current */
	usb_charger_current_suspend = <0>;
	usb_charger_current_unconfigured = <70000>;
	usb_charger_current_configured = <500000>;
	usb_charger_current = <500000>;
	ac_charger_current = <2000000>;
	ac_charger_input_current = <2000000>;
	non_std_ac_charger_current = <1000000>;
	charging_host_charger_current = <1500000>;
	apple_1_0a_charger_current = <650000>;
	apple_2_1a_charger_current = <800000>;
	ta_ac_charger_current = <2000000>;
	typec_limit_aicr = <2000000>;

	/* battery temperature protection */
	enable_min_charge_temperature;
	min_charge_temperature = <0>;
	min_charge_temperature_plus_x_degree = <10>;
	max_charge_temperature = <60>;
	max_charge_temperature_minus_x_degree = <45>;

	/*mmi config*/
	mmi,iterm-ma = <243>;
	mmi,mmi-temp-zones = <0 4200 1000 0>,
			<10 0 1000 1000>,
			<15 4200 2500 1000>,
			<45 0 4000 4000>,
			<60 4200 3600 0>;
	mmi,enable-charging-limit;
	mmi,upper-limit-capacity = <65>;
	mmi,lower-limit-capacity = <60>;
	mmi,vfloat-comp-uv = <20000>;
};

&bat_gm30 {
	EMBEDDED_SEL = <(1)>;	/* embedded battery.*/
	DIFFERENCE_FULLOCV_ITH = <(244)>;	/*Charging termination current.*/

	df-serialnum = "SB18C51711";
	#include "bat_setting/batterytable_kg40_atl_4000mah_ext.dtsi"
};

&led6 {
	led_mode = <4>;
};

&dsi0 {
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;
	panel1@0 {
		compatible = "icnl9911c,truly,vdo";
		reg = <0>;
		reset-gpios = <&pio 86 0>;
		bias-gpios = <&pio 137 0>,
			<&pio 138 0>;
		pinctrl-names = "default";
		port {
			panel_in1: endpoint {
				remote-endpoint = <&dsi_out>;
			};
		};
	};
	ports {
		port {
			dsi_out: endpoint {
				remote-endpoint = <&panel_in1>;
			};
		};
	};
};
